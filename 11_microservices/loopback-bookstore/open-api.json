{
  "openapi": "3.0.0",
  "info": {
    "title": "loopback-bookstore",
    "version": "0.0.1",
    "description": "loopback-bookstore",
    "contact": {
      "name": "fabogit",
      "email": "fabo.dev.email@gmail.com"
    }
  },
  "paths": {
    "/books/count": {
      "get": {
        "x-controller-name": "BooksController",
        "x-operation-name": "count",
        "tags": [
          "BooksController"
        ],
        "responses": {
          "200": {
            "description": "Book model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Book.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Book>"
                }
              }
            }
          }
        ],
        "operationId": "BooksController.count"
      }
    },
    "/books/{id}": {
      "put": {
        "x-controller-name": "BooksController",
        "x-operation-name": "replaceById",
        "tags": [
          "BooksController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Book PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "BooksController.replaceById"
      },
      "patch": {
        "x-controller-name": "BooksController",
        "x-operation-name": "updateById",
        "tags": [
          "BooksController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Book PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "BooksController.updateById"
      },
      "get": {
        "x-controller-name": "BooksController",
        "x-operation-name": "findById",
        "tags": [
          "BooksController"
        ],
        "responses": {
          "200": {
            "description": "Book model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book.Filter"
                }
              }
            }
          }
        ],
        "operationId": "BooksController.findById"
      },
      "delete": {
        "x-controller-name": "BooksController",
        "x-operation-name": "deleteById",
        "tags": [
          "BooksController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Book DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "BooksController.deleteById"
      }
    },
    "/books": {
      "post": {
        "x-controller-name": "BooksController",
        "x-operation-name": "create",
        "tags": [
          "BooksController"
        ],
        "responses": {
          "200": {
            "description": "Book model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBook"
              }
            }
          }
        },
        "operationId": "BooksController.create"
      },
      "patch": {
        "x-controller-name": "BooksController",
        "x-operation-name": "updateAll",
        "tags": [
          "BooksController"
        ],
        "responses": {
          "200": {
            "description": "Book PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Book.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Book>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookPartial"
              }
            }
          }
        },
        "operationId": "BooksController.updateAll"
      },
      "get": {
        "x-controller-name": "BooksController",
        "x-operation-name": "find",
        "tags": [
          "BooksController"
        ],
        "responses": {
          "200": {
            "description": "Array of Book model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "BooksController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "Book": {
        "title": "Book",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "author": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "author",
          "title"
        ],
        "additionalProperties": false
      },
      "NewBook": {
        "title": "NewBook",
        "type": "object",
        "description": "(tsType: Omit<Book, 'id'>, schemaOptions: { title: 'NewBook', exclude: [ 'id' ] })",
        "properties": {
          "author": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "author",
          "title"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Book, 'id'>"
      },
      "BookWithRelations": {
        "title": "BookWithRelations",
        "type": "object",
        "description": "(tsType: BookWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "author": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "author",
          "title"
        ],
        "additionalProperties": false,
        "x-typescript-type": "BookWithRelations"
      },
      "BookPartial": {
        "title": "BookPartial",
        "type": "object",
        "description": "(tsType: Partial<Book>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "author": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Book>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "Book.Filter": {
        "type": "object",
        "title": "Book.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "author": {
                    "type": "boolean"
                  },
                  "title": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "author",
                    "title"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Book.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Book>"
      },
      "Book.Filter1": {
        "type": "object",
        "title": "Book.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Book.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "author": {
                    "type": "boolean"
                  },
                  "title": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "author",
                    "title"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Book.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Book>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      }
    }
  }
}